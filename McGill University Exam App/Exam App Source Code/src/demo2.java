
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HimelSaha
 */
public class demo2 extends javax.swing.JFrame {

    /**
     * Creates new form demo2
     */
    public demo2() {
        initComponents();
        this.setSize(1022, 694);                                                // setting the applet size
        this.setTitle("McGill University Exam Schedule Finder");                // setting the applet title
        jScrollPane1.setBorder(null);
        tbl.setVisible(false);
        jPanel1.setVisible(false);
        txtfieldCrsNum.setBackground(new java.awt.Color(255, 255, 255, 190));   // setting text field attributes
        jPanel1.setBackground(new java.awt.Color(255, 255, 255, 0));            // setting jPanel background
        tbl.setBackground(new java.awt.Color(0, 0, 255, 40));                   // setting JTable background
        lblWarning.setVisible(false);
        jPanel1.setSize(jPanel1.getWidth(), 18 + 3);                            // base height is 21 for table header
        txtInfo.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        txtfieldCrsNum = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        lblWarning = new javax.swing.JLabel();
        txtInfo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Code", "Course Title", "Exam Date", "Time", "Place"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl.setToolTipText("Course Final Exam Schedule");
        tbl.setGridColor(new java.awt.Color(204, 255, 102));
        tbl.setOpaque(false);
        tbl.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbl);
        if (tbl.getColumnModel().getColumnCount() > 0) {
            tbl.getColumnModel().getColumn(1).setResizable(false);
            tbl.getColumnModel().getColumn(2).setResizable(false);
            tbl.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 968, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(15, 249, 1000, 240);

        txtfieldCrsNum.setToolTipText("Enter your course codes (use comma for multiple courses, ex - XXXX xxx, XXXX xxx)");
        txtfieldCrsNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfieldCrsNumKeyPressed(evt);
            }
        });
        getContentPane().add(txtfieldCrsNum);
        txtfieldCrsNum.setBounds(60, 90, 880, 39);

        btnSearch.setText("Find Exam Schedule");
        btnSearch.setToolTipText("Find your exam schedule");
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSearchMouseClicked(evt);
            }
        });
        getContentPane().add(btnSearch);
        btnSearch.setBounds(400, 160, 175, 29);

        lblWarning.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblWarning.setForeground(new java.awt.Color(255, 255, 255));
        lblWarning.setText("Enter valid input");
        getContentPane().add(lblWarning);
        lblWarning.setBounds(420, 210, 140, 20);

        txtInfo.setBackground(new java.awt.Color(153, 153, 153));
        txtInfo.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        txtInfo.setText(" Enter your course codes");
        getContentPane().add(txtInfo);
        txtInfo.setBounds(60, 60, 610, 21);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/More information on_ Plus d'informations sur_ mcgill.ca.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -80, 1130, 806);

        jLabel2.setText("jLabel2");
        jLabel2.setToolTipText("Created by McGill University Computer Engineering student Himel Saha.");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 620, 130, 20);

        setSize(new java.awt.Dimension(1065, 704));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method gets executed when mouse is clicked on the JButton "Find Exam Schedule".
     *
     * @param evt The mouse click event.
     */

    private void btnSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseClicked
        lblWarning.setVisible(false);
        this.search();
        if (tbl.getRowCount() == 0) {                                           // if input results in no output, a message appears
            lblWarning.setVisible(true);                                        // to inform the user to type in valid input
            jPanel1.setVisible(false);
        } else {
            lblWarning.setVisible(false);                                       // otherwise the message is not shown
        }
    }//GEN-LAST:event_btnSearchMouseClicked

    /**
     * This method gets executed when "Enter" is pressed after typing in input in the input text field.
     *
     * @param evt The keyboard event that awaits the press of "Enter" key.
     */

    private void txtfieldCrsNumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfieldCrsNumKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            lblWarning.setVisible(false);
            this.search();
            if (tbl.getRowCount() == 0) {                                       // if input results in no output, a message appears
                lblWarning.setVisible(true);                                    // to inform the user to type in valid input
                jPanel1.setVisible(false);
            } else {
                lblWarning.setVisible(false);                                   // otherwise the message is not shown
            }
        }
    }//GEN-LAST:event_txtfieldCrsNumKeyPressed

    @SuppressWarnings("resource")

    /**
     * This method performs the algorithm required to get the details
     * corresponding to the information typed in by the user and displays the
     * output for each input in a JTable.
     */
    void search() {
        Queue q = new Queue();                                                  // creating new Queue object for storing tokens
        String temp;
        BufferedReader rd = null;
        InputStream is = null;
        String crs = txtfieldCrsNum.getText().trim();                           // getting input string from the text field

        StringTokenizer st = new StringTokenizer(crs.trim(), ",", false);       // using StringTokenizer to separate multiple
                                                                                // course codes from user input string into tokens
        while (rd == null) {
            try {
                is = demo2.class.getResourceAsStream("this.txt");
                rd = new BufferedReader(new InputStreamReader(is));             // reading the InputStream file
            } catch (Exception ex) {
                System.out.println("Unable to open file, try again.");
                txtfieldCrsNum.setText("Unable to find course, try again.");
            }
        }

        try {
            DefaultTableModel model = (DefaultTableModel) tbl.getModel();       
            model.setNumRows(0);
            String newStr = null;

            while (st.hasMoreTokens()) {                                        // treating each token and searching for the token in the file
                temp = st.nextToken().trim();                                   // trimming to avoid leading and trailing whitespaces
                if(temp.equalsIgnoreCase("")) continue;
                System.out.println("token  = " + temp);
                if (temp.length() == 7) {                                       // rectifying the input string token, if syntax is not followed by user
                    newStr = temp.substring(0, 4).trim() + " " + temp.substring(4, temp.length()).trim();
                } else if (temp.length() >= 9) {
                    newStr = temp.substring(0, 4).trim() + " " + temp.substring(temp.length() - 3, temp.length()).trim();
                } else {
                    newStr = temp;
                }
                
                rd = new BufferedReader(new InputStreamReader(is));

                // Read the file a line at a time and print the data into JTable if there is a match between the token and the line.
                
                while (true) {
                    String line = rd.readLine();				// Read a line of text
                    if (line == null) {
                        is = demo2.class.getResourceAsStream("this.txt");
                        break;                                                  // Exit if at end of file
                    }

                    if (line.trim().equalsIgnoreCase(newStr)) {
                        q.enqueue(line);                                        // enqueuing the required strings into the Queue
                        line = rd.readLine().trim();
                        while (!line.equalsIgnoreCase("")) {
                            line = rd.readLine().trim();
                            q.enqueue(line);
                        }
                        //----------------------------
                        model = (DefaultTableModel) tbl.getModel();
                        Object[] cols = new Object[5];

                        while (q.front != null) {                               // populating the JTable with appropriate data
                            cols[0] = q.dequeue();                              // if the token is found within the file
                            cols[1] = q.dequeue();
                            cols[2] = q.dequeue();
                            cols[3] = q.dequeue();
                            cols[4] = q.dequeue();
                            model.addRow(cols);
                        }
                        tbl.setVisible(true);                                   // setting the JTable visibility to true

                        jPanel1.setSize(jPanel1.getWidth(), 21 + (tbl.getRowCount() * 17));   // increasing the JTable height according to the number of rows
                        jPanel1.setVisible(true);
                        //----------------------------
                        is = demo2.class.getResourceAsStream("this.txt");
                        break;
                    }
                }
            }
        } catch (Exception ex) {
            System.out.println("I/O Error - program terminated");
            lblWarning.setVisible(true);
        }

        System.out.println("\n\nProgram terminated");

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(demo2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(demo2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(demo2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(demo2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new demo2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblWarning;
    private javax.swing.JTable tbl;
    private javax.swing.JLabel txtInfo;
    private javax.swing.JTextField txtfieldCrsNum;
    // End of variables declaration//GEN-END:variables
}
